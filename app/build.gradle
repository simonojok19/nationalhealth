plugins {
    id 'com.android.application'
}

def productRootDir = "../.."
def productBinDir = new File(productRootDir, "Bin")
def productBinAndroidDir = new File(productBinDir, "Android")
def productLibAndroidDir = new File(productRootDir, "Lib/Android")
def archUsed = "arm64-v8a,armeabi-v7a,x86"

def usedNdfList = ["FacesDetectSegmentsAttributes.ndf",
                   "FacesDetectSegmentsOrientation.ndf",
                   "FacesDetectSegmentsFeaturePointsTrack.ndf",
                   "FacesDetectSegmentsLiveness.ndf",
                   "FacesCreateTemplateSmall.ndf",
                   "FacesCreateTemplateMedium.ndf",
                   "FacesDetect90Lite.ndf",
                   "FacesDetectSegmentsFeaturePointsDetect.ndf",
                   "FacesDetectSegmentsOrientation90.ndf",
                   "FacesCreateTemplateQuality.ndf",
                   "FacesDetectSegmentsPassiveLiveness.ndf"]


android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    dexOptions {
        javaMaxHeapSize "4g"
    }

    defaultConfig {
        applicationId "com.example.nationalhealth"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"
        multiDexEnabled true

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        ndk {
            abiFilters 'x86', 'armeabi-v7a', 'arm64-v8a'
        }
    }

    buildTypes {
        release {
            useProguard true
            shrinkResources false
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    aaptOptions {
        noCompress "tflite"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    repositories {
        maven { url "https://jitpack.io" }
    }

    lintOptions {
        abortOnError false
    }
}

gradle.projectsEvaluated {
    tasks.withType(JavaCompile) {
        options.compilerArgs << "-Xlint:deprecation"
    }
}

clean {
    delete fileTree(dir: productBinAndroidDir , include: "${"face-sample"}*.*")
}

task deleteTemporaryFiles(type: Delete) {
    for (String file : usedNdfList) {
        delete "${android.sourceSets.main.assets.srcDirs[0]}/data/${file}.jet"
    }
    delete "${android.sourceSets.main.jniLibs.srcDirs[0]}"
}

task prepareNdfFiles(type: Copy) {

    from "${productBinDir}/Data"
    includes = usedNdfList
    rename { String fileName ->
        fileName.replace('.ndf', '.ndf.jet')
    }
    into "${android.sourceSets.main.assets.srcDirs[0]}/data"
}

int counter = 1
archUsed.split(',').each {
    String srcDir = "${productLibAndroidDir}/${it}"
    String dstDir = "${android.sourceSets.main.jniLibs.srcDirs[0]}/${it}"
    task "prepareNativeLibs$counter"(type: Copy) {
        from srcDir
        exclude "**/libgstreamer_android.so"
        exclude "**/*.Test.so"
        exclude "**/*.IT.so"
        into dstDir
        dependsOn(prepareNdfFiles)
    }
    tasks.preBuild.dependsOn("prepareNativeLibs$counter")
    counter++
}

task publishApk(type: Copy) {
    from "${project.buildDir}/outputs/apk/debug"
    include "${project.archivesBaseName}-debug.apk"
    rename "${project.archivesBaseName}-debug.apk", "${project.archivesBaseName}.apk"
    into productBinAndroidDir
}

clean.dependsOn(deleteTemporaryFiles)
prepareNdfFiles.dependsOn(clean)
build.finalizedBy(publishApk)

repositories {
    google()
    jcenter()
    maven { url "https://jitpack.io" }
    flatDir {
        dirs "${productBinAndroidDir}/"
    }
}

dependencies {

    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.3.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    //barcode
    implementation 'com.github.KingsMentor:MobileVisionBarcodeScanner:2.0.0'

    api 'com.google.android.gms:play-services-vision:15.0.2'
    implementation 'com.tbruyelle.rxpermissions2:rxpermissions:0.9.4@aar'
    implementation 'io.reactivex.rxjava2:rxjava:2.1.6'

    implementation 'com.squareup.retrofit2:retrofit:2.1.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.1.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.4.1'

    // Room components
    implementation 'android.arch.persistence.room:runtime:1.0.0-alpha1'
    annotationProcessor 'android.arch.persistence.room:compiler:1.0.0-alpha1'

    // face
    implementation ":neurotec-biometrics-client-android"
    implementation ":neurotec-devices-fscanners-nitgen-android"
    implementation ":neurotec-devices-fscanners-aratek-android"
    implementation ":neurotec-devices-fscanners-aratek-trustfinger-android"
    implementation ":neurotec-devices-fscanners-suprema-biomini-android"
    implementation ":neurotec-devices-fscanners-ekemp-android"
    implementation ":neurotec-devices-fscanners-bluefin-android"
    implementation ":neurotec-devices-multimodal-credenceid-android"
    implementation ":neurotec-devices-fscanners-digitalpersona-uareu-android"
    implementation ":neurotec-devices-fscanners-secugen-android"
    implementation ":neurotec-devices-fscanners-futronic-android"
    implementation ":neurotec-devices-fscanners-integratedbiometrics-android"
    implementation ":neurotec-devices-fscanners-smufsbio-android"
    implementation ":neurotec-devices-fscanners-startek-android"
    implementation ":neurotec-devices-fscanners-nextbiometrics-android"
    implementation ":neurotec-devices-fscanners-greenbit-android"
    implementation ":neurotec-devices-fscanners-zkteco-android"
    implementation ":neurotec-devices-fscanners-morpho-android"
    implementation ":neurotec-devices-fscanners-bitel-android"
    implementation ":neurotec-devices-fscanners-identos-tactivo-android"
    implementation ":neurotec-devices-irisscanners-iritech-irishield-android"
    implementation ":neurotec-devices-irisscanners-mantra-android"
    implementation ":neurotec-devices-media-android"
    implementation ":neurotec-biometrics-android"
    implementation ":neurotec-devices-android"
    implementation(name:'neurotec-biometrics-gui-android', ext:'aar')
    implementation project(":utils")
}